{"version":3,"sources":["components/UserInfo/index.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/index.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/index.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","setTitle","titleError","setTitleError","setUserId","userError","setUserError","action","method","onSubmit","event","preventDefault","addedTodo","Math","max","trim","push","htmlFor","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.685b035f.chunk.js","sourcesContent":["import { UserInfo } from './UserInfo';\n\nexport default UserInfo;\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  user: {\n    name,\n    email,\n  },\n}) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { TodoInfo } from './TodoInfo';\n\nexport default TodoInfo;\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport UserInfo from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    completed,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoList } from './TodoList';\n\nexport default TodoList;\n","import TodoInfo from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport TodoList from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [userError, setUserError] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setUserError(false);\n  };\n\n  const handleForm = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const addedTodo: Todo = {\n      id: Math.max(0, ...todos.map(({ id }) => id)) + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    if (title.trim() && userId) {\n      todos.push(addedTodo);\n      setTitle('');\n      setUserId(0);\n    } else {\n      setTitleError(title.trim() === '');\n      setUserError(userId === 0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleForm}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:  </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n          {titleError\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"title\">User:  </label>\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={userId}\n            onChange={handleUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(({ name, id }) => (\n              <option value={id}>{name}</option>\n            ))}\n          </select>\n\n          {userError\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}